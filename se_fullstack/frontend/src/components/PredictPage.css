// src/components/PredictPage.jsx
import React, { useState, useEffect } from "react";
import axios from "axios";
import "./PredictPage.css";

const API_BASE =
  process.env.NODE_ENV === "production" ? "" : "http://localhost:5000";

export default function PredictPage() {
  const [file, setFile] = useState(null);
  const [preview, setPreview] = useState(null);
  const [error, setError] = useState("");
  const [result, setResult] = useState("");
  const [history, setHistory] = useState([]);

  // Load past predictions on mount
  useEffect(() => {
    axios
      .get(`${API_BASE}/history`)
      .then((res) => setHistory(res.data))
      .catch((_) => {
        /* ignore */
      });
  }, []);

  // When user selects a file, generate preview URL
  function handleFileChange(e) {
    const f = e.target.files[0];
    if (!f) return;
    setFile(f);
    setPreview(URL.createObjectURL(f));
    setResult("");
    setError("");
  }

  // Upload and predict
  function handleSubmit(e) {
    e.preventDefault();
    if (!file) {
      setError("Please select an image first.");
      return;
    }
    setError("");
    const form = new FormData();
    form.append("image", file);

    axios
      .post(`${API_BASE}/upload`, form, {
        headers: { "Content-Type": "multipart/form-data" },
      })
      .then((res) => {
        const record = res.data.data;
        setResult(record.result);
        setHistory((h) => [record, ...h]);
      })
      .catch((err) => {
        console.error(err);
        setError("Upload failed, please try again.");
      });
  }

  return (
    <>
      <div className="white-box">
        <div className="box-header logo-only">
          <span className="logo">‚úàÔ∏è Aerial Vehicle Detector</span>
        </div>
        <div className="box-body">
          <h1>Snap. Upload. Detect</h1>
          <p>Upload an image to classify it as Military, Civilian, UAV or Unknown</p>
        </div>

        <form className="upload-form" onSubmit={handleSubmit}>
          <label className="drop-box">
            {preview ? (
              <img src={preview} className="preview-image" alt="preview" />
            ) : (
              <>
                üìÅ<br />
                Drop an image here or click to upload
              </>
            )}
            <input
              type="file"
              accept="image/*"
              onChange={handleFileChange}
              style={{ display: "none" }}
            />
          </label>

          <button
            type="submit"
            className="submit-btn"
            disabled={!file}
          >
            üöÄ Predict
          </button>
        </form>

        {error && <div className="error-message">{error}</div>}

        {result && (
          <div className="prediction-result">
            <h3>Result</h3>
            <div className="result-text">{result}</div>
          </div>
        )}
      </div>

      {history.length > 0 && (
        <div className="history-box">
          <h2>Past Predictions</h2>
          <div className="history-table-container">
            <table>
              <thead>
                <tr>
                  <th>Image</th>
                  <th>Result</th>
                  <th>When</th>
                </tr>
              </thead>
              <tbody>
                {history.map((r) => (
                  <tr key={r._id}>
                    <td>
                      <img
                        src={`${API_BASE}/${r.imagePath}`}
                        className="history-img"
                        alt="uploaded"
                      />
                    </td>
                    <td>{r.result}</td>
                    <td>{new Date(r.timestamp).toLocaleString()}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}
    </>
  );
}
